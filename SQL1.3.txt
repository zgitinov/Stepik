/*
Выбор уникальных элементов столбца
Чтобы отобрать уникальные элементы некоторого столбца используется ключевое слово DISTINCT, которое размещается сразу после SELECT.

Задание:
Отобрать различные (уникальные) элементы столбца amount таблицы book.
*/

SELECT  DISTINCT amount
FROM book;

/*
Выборка данных, групповые функции SUM и COUNT
При группировке над элементами столбца, входящими в группу можно выполнить различные действия, 
например, просуммировать их или найти количество элементов в группе.

Подробно рассмотрим, как осуществляется группировка данных по некоторому столбцу и вычисления над группой на следующем примере:

SELECT author, sum(amount), count(amount)
FROM book
GROUP BY author;

Задание:
Посчитать, количество различных книг и количество экземпляров книг каждого автора , хранящихся на складе.  
Столбцы назвать Автор, Различных_книг и Количество_экземпляров соответственно.
*/

SELECT 
    author AS Автор,
    COUNT(title) AS Различных_книг, 
    SUM(amount) AS Количество_экземпляров
FROM book
GROUP BY author;

/*
Выборка данных, групповые функции MIN, MAX и AVG
К групповым функциям SQL относятся: MIN(), MAX() и AVG(), которые вычисляют минимальное, максимальное и среднее значение элементов столбца, относящихся к группе.

Задание:
Вывести фамилию и инициалы автора, минимальную, максимальную и среднюю цену книг каждого автора . 
Вычисляемые столбцы назвать Минимальная_цена, Максимальная_цена и Средняя_цена соответственно.
*/

SELECT author, 
    MIN(price) AS Минимальная_цена, 
    MAX(price) AS Максимальная_цена, 
    AVG(price) AS Средняя_цена
FROM book
GROUP BY author;

/*
Выборка данных c вычислением, групповые функции
В качестве аргумента групповых функций  SQL может использоваться не только столбец, но и любое допустимое в SQL арифметическое выражение.

Задание:
Для каждого автора вычислить суммарную стоимость книг S (имя столбца Стоимость), 
а также вычислить налог на добавленную стоимость  для полученных сумм (имя столбца НДС ) , 
который включен в стоимость и составляет k = 18%,  а также стоимость книг  (Стоимость_без_НДС) без него. 
Значения округлить до двух знаков после запятой. В запросе для расчета НДС(tax)  и Стоимости без НДС(S_without_tax)
*/

SELECT 
	author,
    SUM(price * amount) AS 'Стоимость',
    ROUND(SUM(price * amount)*18/100/(1+18/100), 2) AS 'НДС',
    ROUND(SUM(price * amount)/(1+18/100), 2) AS 'Стоимость_без_НДС'
FROM book
GROUP BY author;

/*
Вычисления по таблице целиком
Групповые функции позволяют вычислять итоговые значения по всей таблице. 
Например, можно посчитать общее количество книг на складе, вычислить суммарную стоимость и пр. 
Для этого после ключевого слова SELECT указывается групповая функция для выражения или имени столбца, а ключевые слова GROUP BY опускаются.

Задание:
Вывести  цену самой дешевой книги, цену самой дорогой и среднюю цену уникальных книг на складе. 
Названия столбцов Минимальная_цена, Максимальная_цена, Средняя_цена соответственно. Среднюю цену округлить до двух знаков после запятой.
*/

SELECT 
    MIN(price) AS 'Минимальная_цена',
    MAX(price) AS 'Максимальная_цена',
    ROUND (AVG(price),2) AS 'Средняя_цена'
FROM book;

/*
Выборка данных по условию, групповые функции
В запросы с групповыми функциями можно включать условие отбора строк, которое в обычных запросах записывается после WHERE. 
В запросах с групповыми функциями вместо WHERE используется ключевое слово HAVING , которое размещается после оператора GROUP BY.

Задание:
Вычислить среднюю цену и суммарную стоимость тех книг, количество экземпляров которых принадлежит интервалу от 5 до 14, включительно. 
Столбцы назвать Средняя_цена и Стоимость, значения округлить до 2-х знаков после запятой.
*/

SELECT
    ROUND (AVG(price),2) AS 'Средняя_цена',
    SUM(price*amount) AS 'Стоимость'
FROM book
WHERE amount BETWEEN 5 AND 14;

/*
Выборка данных по условию, групповые функции, WHERE и HAVING
WHERE и HAVING могут использоваться в одном запросе. При этом необходимо учитывать порядок выполнения  SQL запроса на выборку на СЕРВЕРЕ:

FROM
WHERE
GROUP BY
HAVING
SELECT
ORDER BY
Сначала определяется таблица, из которой выбираются данные (FROM), 
затем из этой таблицы отбираются записи в соответствии с условием  WHERE, выбранные данные агрегируются (GROUP BY),  
из агрегированных записей выбираются те, которые удовлетворяют условию после HAVING. 
Потом формируются данные результирующей выборки, как это указано после SELECT ( вычисляются выражения, присваиваются имена и пр. ). 
Результирующая выборка сортируется, как указано после ORDER BY.

Важно! Порядок ВЫПОЛНЕНИЯ запросов - это не порядок ЗАПИСИ ключевых слов в запросе на выборку. 
Порядок записи (синтаксис запроса) остается таким же, как рассматривался ранее в курсе.
Порядок ВЫПОЛНЕНИЯ  нужен для того, чтобы понять, почему, например, в WHERE нельзя использовать имена выражений из SELECT.
Просто SELECT выполняется компилятором позже, чем WHERE, поэтому ему неизвестно, какое там выражение написано.
*/

SELECT 
    author, 
    SUM(price * amount) AS Стоимость
FROM book
WHERE title NOT IN ('Идиот', 'Белая гвардия')
GROUP BY author
HAVING (price * amount) > 5000
ORDER BY Стоимость DESC;

/*
Сколько денег понадобится покупателю, чтобы приобрести все виды книг по одному экземпляру каждой?

 Имена результирующих столбцов:
- Стоимость_всех_книг_по_одному_экз

- Количество_купленных_книг
*/

SELECT
    author AS 'Автор',
    COUNT(title) AS 'Количество_купленных_книг',
    SUM(price) AS 'Стоимость_всех_книг_по_одному_экз',
FROM book;

/*
Вы получаете на работе первое задание по взаимодействию с БД. 
Нужно проверить корректно ли прошла покупка с условиями. Для этого, выведите результат:
*/

SELECT
    author AS 'Автор',
    COUNT(title) AS 'Кол-во_книг',
    SUM(price) AS 'Итоговая_сумма',
    COUNT(title)*4 AS 'Кол-во_книг_скидка',
    ROUND (SUM(price)/ 1.15*4, 2) AS 'Итоговая_сумма_скидка'
FROM book
WHERE amount >= 4
GROUP BY author;
